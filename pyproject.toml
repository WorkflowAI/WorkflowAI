[project]
name = "workflowai-api"
version = "0.0.1"
requires-python = ">=3.12,<3.13"

[tool.pyright]
include = ["api", "scripts"]
ignore = ["src/oldstuff"]
reportMatchNotExhaustive = true
defineConstant = {}
stubPath = "api/stubs"

strict = ["**/*.py"]

pythonVersion = "3.12"
pythonPlatform = "Linux"
extraPaths = ["api", "scripts"]

[tool.ruff]
src = ["api", "scripts"]
# Exclude a variety of commonly ignored directories.
line-length = 120
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*_pb2.py",
    "*_pb2_grpc.py",
    ".env",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# TODO: select all and switch to ingore, enable C901, "N"
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "T201",
    "TID251",
    "PERF",
    "I",
    "ASYNC",
    "COM",
    "RET",
    "W",
    "C90",
    "G",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
# We have a 'core.workflowai' in local and 'workflowai' as a third party and this seems to confuse isort.
known-third-party = ["workflowai"]

[tool.ruff.lint.per-file-ignores]
# in bin we use rich.print
"scripts/*" = ["T201", "G004"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"openai.BaseModel".msg = "Import from pydantic instead"

[tool.poetry]
# Not deploying a lib
package-mode = false

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
httpx = "^0.28.1"
motor = { extras = ["srv"], version = "^3.7.0" }
pymongo = { extras = ["srv"], version = "^4.11.3" }
urllib3 = "^2.2.2"
openai = "^1.86.0"
pillow = "^10.4.0"
pyyaml = "^6.0.1"
pydantic-core = "^2.33.1"
pydantic = { version = "^2.11.2", allow-prereleases = false }
tiktoken = "0.7.0"
tokenizers = "0.19.1"
tqdm = "4.66.3"
yarl = "1.9.4"
zipp = "^3.19.1"
python-json-logger = "^2.0.7"
fastapi = "^0.115.12"
starlette = "^0.46.1"
uvicorn = { extras = ["standard"], version = "^0.30.3" }
jsonschema = "^4.22.0"
genson = "^1.3.0"
datamodel-code-generator = "^0.25.6"
sentry-sdk = { version = "^2.25.1" }
cryptography = "^43.0.0"
google-auth = { version = "^2.35.0", extras = ["aiohttp"] }
kombu = "^5.3.7"
taskiq = "^0.11.16"
taskiq-redis = "^1.0.4"
certifi = "^2025.1.31"
hiredis = "^2.3.2"
boto3 = "^1.34.149"
workflowai = "^0.6.4"
soundfile = "^0.12.1"
pydub = "^0.25.1"
azure-storage-blob = "^12.21.0"
python-multipart = "^0.0.18"
pdf2image = "^1.17.0"
stripe = "^11.4.1"
html2text = "^2024.2.26"
jinja2 = "^3.1.5"
clickhouse-connect = "^0.8.16"
mcp = { extras = ["cli"], version = "^1.9.4" }

[tool.poetry.group.dev.dependencies]
freezegun = "^1.5.1"
pre-commit = "^3.7.1"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-timeout = "^2.3.1"
pytest-xdist = "^3.6.1"
pytest-httpx = "^0.35.0"
python-dateutil = "^2.9.0.post0"
python-dotenv = "^1.0.1"
ruff = "^0.9.6"
types-pyyaml = "^6.0.12.20240311"
pyright = "^1.1.385"
locust = "^2.27.0"
typer = { extras = ["all"], version = "^0.15.2" }
questionary = "^2.0.1"
bandit = "^1.8.2"
safety = "^3.2.4"
taskiq = { extras = ["reload"], version = "^0.11.6" }
vulture = "^2.11"
