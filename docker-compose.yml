version: '3.9'
services:
  # Azure Storage Emulator
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'
  # MongoDB Database, used to store most data
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: workflowai
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - '27017:27017'
  # Redis, used as a job broker and result backend
  redis:
    image: redis:latest
    ports:
      - '6379:6379'
  # ClickHouse, used to store runs
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - 8123:8123
      # No need for the 9000 port, it is also used by minio
      # - 9000:9000
    environment:
      CLICKHOUSE_PASSWORD: admin
      CLICKHOUSE_USER: default
    volumes:
      # Execude migration on startup
      - ./api/core/storage/clickhouse/migrations:/docker-entrypoint-initdb.d/

  # API service
  api: &api
    platform: linux/x86_64
    # Override script to only start uvicorn
    # Default start.sh starts both uvicorn and taskiq worker
    command:
      [
        'poetry',
        'run',
        'python',
        '-m',
        'debugpy',
        '--wait-for-client',
        '--listen',
        '0.0.0.0:5678',
        '-m',
        'uvicorn',
        'api.main:app',
        '--host',
        '0.0.0.0',
        '--port',
        '8000',
        '--reload',
        '--reload-exclude',
        'scripts/*',
        '--reload-exclude',
        '*_test.py',
        '--reload-exclude',
        'tests/*',
      ]
    build:
      context: .
      dockerfile: api.Dockerfile
      # Dev is the second to last stage in the Dockerfile
      # It contains all sources and all dependencies, use for local development in docker
      target: dev
    ports:
      - '8000:8000'
      - '5678:5678'
    volumes:
      - ./api/api:/app/api
      - ./api/docs:/app/docs
      - ./api/core:/app/core
      - ./api/stubs:/app/stubs
    env_file:
      - .env
    environment:
      # Overriding environement to use hosts internal to the docker network
      - WORKFLOWAI_MONGO_CONNECTION_STRING=mongodb://admin:admin@mongo:27017/workflowai
      - JOBS_BROKER_URL=redis://redis:6379
      # Use when connecting to Azure Storage Emulator
      # - WORKFLOWAI_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
      - WORKFLOWAI_STORAGE_CONNECTION_STRING=s3://minio:miniosecret@minio:9000/workflowai-task-runs?secure=false
    depends_on:
      - mongo
      - redis
      - minio
      - clickhouse
  worker:
    <<: *api
    # No ports needed
    ports: []
    command:
      [
        'poetry',
        'run',
        'taskiq',
        'worker',
        'api.broker:broker',
        '--fs-discover',
        '--tasks-pattern',
        'api/jobs/*_jobs.py',
        '--workers',
        '1',
        '--reload',
      ]
  # Client, serves the fronted
  client:
    build:
      context: .
      dockerfile: client.Dockerfile
      # Comment target line to build full image and be close to production
      # The Sources image contains the non optimized Next project
      # If you wish to use the optimized build, you'll need to remove the `command` override
      # target: sources
      args:
        - ENV_NAME=${ENV_NAME}
        # API URL used at runtime and during build
        - API_URL=${NEXT_PUBLIC_WORKFLOWAI_API_URL}
        # Add a release name to the build, used for analytics and sentry
        - RELEASE_NAME=${RELEASE_NAME}
        # Strny setup
        - SENTRY_DISABLED=${SENTRY_DISABLED}
        - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
        # Optionally disable authentication for a quick start
        - NEXT_PUBLIC_DISABLE_AUTHENTICATION=${NEXT_PUBLIC_DISABLE_AUTHENTICATION}
        - NEXT_PUBLIC_HARDCODED_TENANT=${NEXT_PUBLIC_HARDCODED_TENANT}
        # Stripe
        - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
        # Amplitude
        - NEXT_PUBLIC_AMPLITUDE_API_KEY=${NEXT_PUBLIC_AMPLITUDE_API_KEY}
        # Clerk
        - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}

      secrets:
        # Sentry auth token, used during build phase to upload sourcemaps and create
        # the release required if SENTRY_DISABLED is not set to true
        - sentry_auth_token
    # Start the app in development mode
    # Comment out when use the full optimized build
    # command: yarn workspace workflowai dev
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      # Override the API URL to point to the API container inside the network
      # This endpoint will be used by the proxy route
      - WORKFLOWAI_API_URL=http://api:8000
    # volumes:
    #   - ./client:/app/client
    #   - ./yarn.lock:/app/yarn.lock
    #   - ./package.json:/app/package.json

  minio:
    image: minio/minio
    entrypoint: sh
    ports:
      - '9000:9000'
      - '9001:9001'
    # Create the task_runs bucket before starting minio
    command: -c 'mkdir -p /data/workflowai-task-runs && mkdir -p /data/workflowai-test-task-runs && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: miniosecret
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret

networks:
  default:
    name: workflowai

secrets:
  sentry_auth_token:
    environment: SENTRY_AUTH_TOKEN
