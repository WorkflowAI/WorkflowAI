from collections.abc import AsyncIterator
from typing import Any

import workflowai
from pydantic import BaseModel, Field
from workflowai import Model

from core.domain.fields.chat_message import ChatMessage
from core.domain.task_preview import TaskPreview


class GenerateTaskPreviewTaskInput(BaseModel):
    chat_messages: list[ChatMessage] = Field(
        description="the chat messages that originated the creation of the task to generate a preview for",
    )
    task_input_schema: dict[str, Any] = Field(
        description="the input schema of the task to generate a preview for",
    )
    task_output_schema: dict[str, Any] = Field(
        description="the output schema of the task to generate a preview for",
    )

    current_preview: TaskPreview | None = Field(
        default=None,
        description="The current task preview (input, output) to reuse and update, if already existing",
    )


class GenerateTaskPreviewTaskOutput(BaseModel):
    preview: TaskPreview | None = Field(
        default=None,
        description="The new task preview (input, output) generated by the task",
    )


@workflowai.agent(id="generate-task-preview", model=Model.GEMINI_2_0_FLASH_EXP)
def stream_generate_task_preview(
    input: GenerateTaskPreviewTaskInput,
) -> AsyncIterator[GenerateTaskPreviewTaskOutput]:
    """You are a task preview generator specializing in creating representative examples for input and output schemas. Your goal is to generate a preview that includes realistic example data for both input and output that match the provided schemas (types, names, etc.). The preview should be clear, demonstrate typical usage, and be easy to understand. If the schema has not changed, you MUST reuse exactly the 'current_preview' provided. If a 'current_preview' exists and the schema has changed, you MUST use 'current_preview' as a base and fill fields while maintaining schema compatibility. Consider any chat messages to make the preview more relevant and accurate. Ensure that the preview includes example input data and corresponding example output data that clearly illustrate how the input data is processed according to the provided schemas. In case the schema contains any '#/$defs/File' field, use "sample_b64_data" as "data" and "sample_url" as "url"."""
    ...
