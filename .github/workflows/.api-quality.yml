name: API Quality
on:
  workflow_call:
    inputs:
      # Skipping needs to happen at the job level, otherwise
      # Github will keep waiting for status checks
      skip:
        required: false
        type: boolean
        default: false

jobs:
  api-quality:
    if: inputs.skip != true
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
        ports:
          - 27017:27017
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      azurite:
        # Container used to check blob storage connection
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
          - 10001:10001
          - 10002:10002
      clickhouse:
        image: clickhouse/clickhouse-server:latest
        ports:
          - 8123:8123
          - 9000:9000
        env:
          CLICKHOUSE_DB: db_test
          CLICKHOUSE_PASSWORD: admin
          CLICKHOUSE_USER: default
    # No need to wait for mongo to be ready here
    # It will likely be ready by the time we run tests
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Poetry
        run: pipx install poetry==1.8.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Ruff
        run: poetry run ruff check --output-format=github

      - name: Pyright
        run: poetry run pyright

      # Setup ffmpeg with tool cache
      - uses: FedericoCarboni/setup-ffmpeg@37062fbf7149fc5578d6c57e08aed62458b375d6 # v3.1
      # Run all tests in the app and tests directories except integration tests
      - name: Run Unit Tests
        run: PYTHONPATH=. poetry run pytest . -W ignore::pydantic.warnings.PydanticDeprecatedSince20 -vv --junitxml=junit/test-results.xml --ignore=api/tests/LLM_tests --ignore=api/tests/e2e --ignore=api/tests/integration

  # Run integration tests separately
  api-integration:
    if: inputs.skip != true
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
        ports:
          - 27017:27017
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      azurite:
        # Container used to check blob storage connection
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
          - 10001:10001
          - 10002:10002
      clickhouse:
        image: clickhouse/clickhouse-server:latest
        ports:
          - 8123:8123
          - 9000:9000
        env:
          CLICKHOUSE_DB: db_int_test
          CLICKHOUSE_PASSWORD: admin
          CLICKHOUSE_USER: default
    # No need to wait for mongo to be ready here
    # It will likely be ready by the time we run tests
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Poetry
        run: pipx install poetry==1.8.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: poetry
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install
      # Setup ffmpeg with tool cache
      - uses: FedericoCarboni/setup-ffmpeg@37062fbf7149fc5578d6c57e08aed62458b375d6 # v3.1
      - name: Install ubuntu dependencies
        run: sudo apt-get install -y poppler-utils
      # Run all tests in the app and tests directories
      - name: Run Unit Tests
        run: PYTHONPATH=. poetry run pytest api/tests/integration -W ignore::pydantic.warnings.PydanticDeprecatedSince20 -vv --junitxml=junit/test-results.xml
